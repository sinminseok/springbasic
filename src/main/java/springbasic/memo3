다양한 의존관계 주입방법

1)생성자 주입
2)수정자주입
3)필드주입
4)일반 메서드 주입

생성자주입
-이름 그대로 생성자를 통해서 의존관계를 주입 받는 방법이다.그동안 진행했던 방법이 생성자주입(Construct injection)이다ㅣ.
 특징은 생성자 호출시점에 딱 1번만 호출되는 것이 보장되고 불변,필수 의존관계에 사용된다.

수정자주입(setter주입)
-setter라 불리는 필드의 값을 변경하는 수정자 메서드를 통해서 의존관계를 주입하는 방법이다.
특징은 선택,변경 가능성이 있는 의존관계에 사용됨

필드주입
-이름그대로 필드에 바로 주입하는 방법이다.
특징은 코드가 간결해 많은 개발자들을 유혹하지만 외부에서 변경이 불가능해 테스트가 힘들다
DI프레임워크가 없으면 아무고ㅓㅅ도 못함 사용하지마셈 ㅋ

일반메서드 주입
생성자가 아닌 일반 메서드로 선언후 그 안에서주입할수 있다 특징으론 한번에 여러 필드를 주입 받을 수 있다,.
이것도 잘 사용안ㄹ함ㅇㅇ 걍 생성자 주입 사용하셈

생성주 주입을 사용하자 그 이유는 다음과 같다.

불변
 -대부분의 의존관계 주입은 한번 일어나면 애플리케이션 종료 시점까지  의존관계를 변경할 일이 없다.오히려 변하면안된다.
 -수정자 주입을 사용하면 setXxx메서드를 public으로 열어 두어야한다.
 -누군가 실수로 변경 할 수도있고 변경하면 안되는 메서드를 열어두는 것은 좋은 설계 방법이아인다.
 -생성자 주입은 객체를 생성할때 딱1번만 호출되므로 이후에 호출되는 일이 없다.
 따라서 불변하게 설계할 수 있다.

 수정자 주입을 포함한 나머지 주입 방식은 모두 생성자 이후에 호출된다. 필드에 final 키워드를 사용할 수없고
 오직 새어앚 주입만이 final 키워드를 사용할 수 있다.

 정리해보면
 생성자 주입 방식을 선택하는 이유는 여러가지 있지만 프레임 워크에 의존하지 않고 순수한
 자바 언어의 특징을 잘 살리는 방법이다.
 기본적으로 새엉자 주입을 사용하고, 필수 값이 아닌 경우에는 수정자 주입 방식을 옵션으로 부여하면됨 ㅇㅇ
 생성자 주입과 수정자 주입을 동시에 사용가능